@model SistemaMediMan.Models.PACIENTES

@{
    ViewBag.Title = "Nuevo Paciente";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <main>
    <div class="form-horizontal">
        <h4>@ViewBag.Title</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="row"><!--row 1-->
            <div class="form-group col-lg-3 col-sm-3 mb-5">
                @Html.LabelFor(model => model.RUT, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.RUT, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.RUT, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group col-lg-3 col-sm-3 mb-5">
                @Html.LabelFor(model => model.NOMBRE, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.NOMBRE, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.NOMBRE, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group col-lg-3 col-sm-3 mb-5">
                @Html.LabelFor(model => model.APELLIDOP, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.APELLIDOP, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.APELLIDOP, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group col-lg-3 col-sm-3 mb-5">
                @Html.LabelFor(model => model.APELLIDOM, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.APELLIDOM, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.APELLIDOM, "", new { @class = "text-danger" })
                </div>
            </div>
        </div><!--fin row 1-->

        <div class="row"><!--row 2-->
            <div class="form-group col-lg-3 col-sm-3 mb-5">
                @Html.LabelFor(model => model.FDENAC, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.FDENAC, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.FDENAC, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group col-lg-3 col-sm-3 mb-5">
                @Html.LabelFor(model => model.EDAD, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.EDAD, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.EDAD, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group col-lg-3 col-sm-3 mb-5">
                @Html.LabelFor(model => model.SEXO, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @{
                        List<SelectListItem> listSexo = new List<SelectListItem>();
                        listSexo.Add(new SelectListItem
                        {
                            Text = "Seleccione",
                            Value = ""
                        });
                        listSexo.Add(new SelectListItem
                        {
                            Text = "Femenino",
                            Value = "false"
                        });
                        listSexo.Add(new SelectListItem
                        {
                            Text = "Masculino",
                            Value ="true"
                        });

                    }
                    @Html.DropDownList("Sexo", listSexo, new { @class = "form-control" })

                    @Html.ValidationMessageFor(model => model.SEXO, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group col-lg-3 col-sm-3 mb-5">
                @Html.LabelFor(model => model.TELEFONOP, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.TELEFONOP, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.TELEFONOP, "", new { @class = "text-danger" })
                </div>
            </div>
        </div><!--fin row 2-->

        <div class="row"><!--row 3-->
            <div class="form-group col-lg-3 col-sm-3 mb-5">
                @Html.LabelFor(model => model.PREVISION, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @{
                        List<SelectListItem> listPrev = new List<SelectListItem>();
                        listPrev.Add(new SelectListItem
                        {
                            Text = "Seleccione",
                            Value = ""
                        });
                        listPrev.Add(new SelectListItem
                        {
                            Text = "Fonasa",
                            Value = "Fonasa"
                        });
                        listPrev.Add(new SelectListItem
                        {
                            Text = "Isapre Cruz Blanca",
                            Value = "Isapre Cruz Blanca"
                        });
                        listPrev.Add(new SelectListItem
                        {
                            Text = "Isapre Nueva Masvida",
                            Value = "Isapre Cruz Blanca"
                        });
                        listPrev.Add(new SelectListItem
                        {
                            Text = "Isapre Banmédica",
                            Value = "Isapre Banmédica"
                        });
                        listPrev.Add(new SelectListItem
                        {
                            Text = "Isapre Colmena Golden Cross",
                            Value = "Isapre Colmena"
                        });
                        listPrev.Add(new SelectListItem
                        {
                            Text = "Isapre Consalud",
                            Value = "Isapre Consalud"
                        });
                        listPrev.Add(new SelectListItem
                        {
                            Text = "Isapre Vida Tres",
                            Value = "Isapre Vida Tres"
                        });
                    }

                    @Html.DropDownList("Prevision", listPrev, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.PREVISION, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group col-lg-3 col-sm-3 mb-5">
                @Html.LabelFor(model => model.CALLE, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.CALLE, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CALLE, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group col-lg-3 col-sm-3 mb-5">
                @Html.LabelFor(model => model.NUMCALLE, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.NUMCALLE, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.NUMCALLE, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group col-lg-3 col-sm-3 mb-5">
                @Html.LabelFor(model => model.DPTO, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.DPTO, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.DPTO, "", new { @class = "text-danger" })
                </div>
            </div>
        </div><!--fin row 3-->

        <div class="row"><!--inicio row 4-->
            <div class="form-group form-group col-lg-3 col-sm-3 mb-5">
                @Html.LabelFor(model => model.COMUNA, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.COMUNA, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.COMUNA, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group col-lg-3 col-sm-3 mb-5">
                @Html.LabelFor(model => model.ACT_ID, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @{
                        List<SelectListItem> listAct = new List<SelectListItem>();
                        listAct.Add(new SelectListItem
                        {
                            Text = "Seleccione",
                            Value = "1"
                        });
                        

                    }
                        @Html.DropDownList("Actividad_id", listAct, new { @class = "form-control" })
                        @Html.EditorFor(model => model.ACT_ID, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ACT_ID, "", new { @class = "text-danger" })
                    </div>
            </div>

            <div class="form-group col-lg-3 col-sm-3 mb-5">
                @Html.LabelFor(model => model.DEP_ID, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.DEP_ID, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.DEP_ID, "", new { @class = "text-danger" })
                </div>
            </div>
        </div><!--fin row 4-->

            <div class="form-group col-lg-3 col-sm-3 mb-5">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default" />
                </div>
            </div>

        </div><!--fin form-->
        </main>
        }

        <div>
            @Html.ActionLink("Back to List", "Index")
        </div>
